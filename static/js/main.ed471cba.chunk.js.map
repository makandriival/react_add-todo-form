{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","TodoList","todos","map","id","username","completed","userId","App","useState","setTitle","userName","setUserName","isTitleEmpty","setIsTitleEmpty","isUserSelected","setIsUserSelected","todosFromServer","usersFromServer","find","serverUser","setTodos","handleErrorsReset","action","method","onSubmit","event","preventDefault","selectedUser","length","type","placeholder","value","onChange","currentTarget","defaultChecked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed471cba.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, user } = todo;\n\n  return (\n    <article data-id=\"1\" className=\"TodoInfo TodoInfo--completed\">\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n          data-id={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userName, setUserName] = useState('');\n  const [isTitleEmpty, setIsTitleEmpty] = useState(false);\n  const [isUserSelected, setIsUserSelected] = useState(false);\n\n  const [todos, setTodos] = useState(todosFromServer.map(todo => {\n    const user = usersFromServer\n      .find(serverUser => serverUser.id === todo.userId) || null;\n\n    return { ...todo, user };\n  }));\n\n  const handleErrorsReset = () => {\n    setIsTitleEmpty(false);\n    setIsUserSelected(false);\n  };\n\n  const handleTitleChange = (event: FormEvent<HTMLInputElement>) => {\n    setTitle(event.currentTarget.value);\n    handleErrorsReset();\n  };\n\n  const handleUserChange = (event: FormEvent<HTMLSelectElement>) => {\n    setUserName(event.currentTarget.value);\n    handleErrorsReset();\n  };\n\n  const addTodo = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const selectedUser = usersFromServer.find(user => user.name === userName);\n\n    if (title.length < 1) {\n      setIsTitleEmpty(true);\n    } else if (!selectedUser) {\n      setIsUserSelected(true);\n    } else {\n      setTodos([\n        ...todos,\n        {\n          id: todos.length + 1,\n          userId: selectedUser?.id,\n          title,\n          completed: false,\n          user: selectedUser || null,\n        }]);\n      setTitle('');\n      setUserName('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addTodo}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"...\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {(isTitleEmpty)\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            onChange={handleUserChange}\n            value={userName}\n          >\n            <option defaultChecked>Choose a user</option>\n            {usersFromServer\n              .map(user => <option key={user.id}>{user.name}</option>)}\n          </select>\n\n          {(isUserSelected)\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}